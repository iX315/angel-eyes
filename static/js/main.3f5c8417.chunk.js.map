{"version":3,"sources":["eyes/paths/closed.js","eyes/paths/angry.js","eyes/paths/open.js","eyes/paths/happy.js","eyes/paths/love.js","eyes/Eye.js","App.js","serviceWorker.js","index.js"],"names":["paths_closed","angry","props","variation","position","paths_open","happy","love","Eye","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","paths","closed","open","interpolators","i","length","push","interpolate","maxSegmentLength","_x1","_x2","_this2","interpolator","mode","react_default","a","createElement","width","height","xmlns","id","concat","x1","y1","x2","y2","className","offset","stopColor","renderprops","reset","native","from","t","to","_ref","path","stroke","d","React","Component","App","clickEvent","sum","state","setState","onClick","eyes_Eye","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f5c8417.chunk.js","sourcesContent":["export default \"m30,150.28125l240,-0.5625\"","export default (props) => {\n    if(props.variation === 'closed') return props.position === 'left'\n     ? \"m64.554815,65.138122c-21.793086,21.712707 -35.2682,51.712707 -35.2682,84.861878c0,66.298343 53.900456,120 120.444231,120c33.271887,0 63.382944,-13.425414 85.176031,-35.138121c10.896543,-10.856354 19.713593,-23.784531 25.806508,-38.142266l-196.15857,-131.581491z\"\n     : \"m234.861878,65.138122c21.712708,21.712707 35.138122,51.712707 35.138122,84.861878c0,66.298343 -53.701657,120 -120,120c-33.149171,0 -63.149171,-13.425414 -84.861879,-35.138121c-10.856353,-10.856354 -19.640884,-23.784531 -25.711326,-38.142266l195.435083,-131.581491z\"\n    return props.position === 'left'\n     ? \"m64.554815,65.138122c-21.793086,21.712707 -35.2682,51.712707 -35.2682,84.861878c0,66.298343 53.900456,120 120.444231,120c33.271887,0 63.382944,-13.425414 85.176031,-35.138121c10.896543,-10.856354 19.713593,-23.784531 25.806508,-38.142266\"\n     : \"m234.86188,65.13812c21.71271,21.71271 35.13812,51.71271 35.13812,84.86188c0,66.29834 -53.70166,120 -120,120c-33.14917,0 -63.14917,-13.42541 -84.86188,-35.13812c-10.85635,-10.85636 -19.64088,-23.78453 -25.71133,-38.14227\"\n}","export default \"m30,150c0,-66.298343 53.701657,-120 120,-120c66.298343,0 120,53.701657 120,120c0,66.298343 -53.701657,120 -120,120c-66.298343,0 -120,-53.701657 -120,-120z\"","export default \"m32.43698,125.80888c1.5979,-7.81337 3.95459,-15.34962 6.98982,-22.52849c3.03522,-7.17887 6.74896,-14.00035 11.06094,-20.38415c4.31198,-6.38381 9.22221,-12.32994 14.65038,-17.75812c5.42818,-5.42817 11.37431,-10.3384 17.75812,-14.65038c6.3838,-4.31198 13.20528,-8.02572 20.38415,-11.06094c7.17887,-3.03523 14.71512,-5.39192 22.52849,-6.98982c7.81336,-1.59789 15.90383,-2.43698 24.19112,-2.43698c8.22327,0.25971 10.25568,0.41453 12.27328,0.61928c7.99385,1.06618 9.9645,1.41823 11.91784,1.8177c3.90668,0.79895 7.74409,1.7876 11.50218,2.95591c3.75809,1.16832 7.43688,2.5163 11.02631,4.03391c7.17887,3.03522 14.00035,6.74896 20.38415,11.06094c6.38381,4.31198 12.32994,9.22221 17.75812,14.65038c5.42817,5.42818 10.3384,11.37431 14.65038,17.75812c4.31198,6.3838 8.02572,13.20528 11.06094,20.38415c3.03523,7.17887 5.39192,14.71512 6.98982,22.52849\"","export default \"m150.04445,101.78524c37.45908,-107.07248 184.22498,0 0,137.66461c-184.22498,-137.66461 -37.45908,-244.73709 0,-137.66461z\"","import React from 'react'\nimport closed from './paths/closed'\nimport angry from './paths/angry'\nimport open from './paths/open'\nimport happy from './paths/happy'\nimport love from './paths/love'\nimport { Spring, animated } from 'react-spring/renderprops'\nimport { interpolate } from 'flubber'\n\nclass Eye extends React.Component {\n  constructor(props) {\n    super(props)\n    let paths = [closed, angry(props), open, happy, love]\n    this.interpolators = []\n    for (let i = 0; i < paths.length; i++) {\n      this.interpolators.push(\n        interpolate(paths[i], paths[i + 1] || paths[0], { maxSegmentLength: 0.5 })\n      )\n    }\n    this._x1 = props.position === 'left' ? \"100%\" : \"0%\"\n    this._x2 = props.position === 'right' ? \"100%\" : \"0%\"\n  }\n\n  render() {\n    const interpolator = this.interpolators[this.props.mode]\n    return (\n      <svg width=\"300\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <linearGradient id={`gradient-${this.props.position}`} x1={this._x1} y1=\"0%\" x2={this._x2} y2=\"0%\">\n            <stop className=\"gradient-start\" offset=\"0%\" stopColor=\"#FFD194\" />\n            <stop className=\"gradient-end\" offset=\"100%\" stopColor=\"#D1913C\" />\n          </linearGradient>\n        </defs>\n        <g>\n          <Spring\n            reset\n            native\n            from={{ t: 0 }}\n            to={{ t: 1 }}>\n            {({ t }) => <animated.path stroke={`url(#gradient-${this.props.position})`} d={t.interpolate(interpolator)} />}\n          </Spring>\n        </g>\n      </svg>\n    )\n  }\n}\nexport default Eye","import React from 'react'\nimport './app.css'\nimport Eye from './eyes/Eye'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {mode: 0}\n  }\n\n  clickEvent = () => {\n    let sum = this.state.mode + 1\n    let mode = sum > 4 ? 0 : sum\n    this.setState({mode})\n  }\n\n  render() {\n    return (\n      <div onClick={this.clickEvent} className=\"flex-center\">\n        <Eye mode={this.state.mode} position=\"left\" />\n        <Eye mode={this.state.mode} position=\"right\" />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}